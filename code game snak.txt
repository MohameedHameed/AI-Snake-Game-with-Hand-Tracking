from gettext import install
import math
import random
from turtle import distance
import tensorflow as tf
import cv2
import cvzone
from cvzone.HandTrackingModule import HandDetector
import mediapipe as mp

cap = cv2.VideoCapture(0)
cap.set(3,800)
cap.set(4,600)
detector = HandDetector(detectionCon=0.7,maxHands=1)

class SnakGame:
    def __init__(self, pathFood):
        self.points = []   #تحديد جميع نقاط الثعبان
        self.length = []   #تحيد المسافة بين كل نقطة
        self.currentLength = 0 # الطول الكامل للثعبان
        self.allowoedLength = 150 # الطول الاجمالي المسموح به
        self.previousHead = 0,0   # النقطة الرئيسية السابقة

        self.imgageFood = cv2.imread(pathFood, cv2.IMREAD_UNCHANGED)
        self.hFood, self.wFood = self.imgageFood.shape
        #عرض الصورة في مكان مختلف 
        self.foodPoints = 0 , 0
        self.randomFoodLocation
    def randomFoodLocation(self):
        self.foodPoints = random.randint(100 , 600), random.randint(100 , 400)


    def update(self, imgMain , currentHead):
        px , py = self.previousHead
        cx ,cy = currentHead
        self.points.append([cx,cy])
        distance = math.hypot(cx - px , cy - py)
        self.length.append(distance)
        self.currentLength += distance
        self.previousHead = cx ,cy
        # تقليل الطول
        if self.currentLength > self.allowoedLength:
            for i, length in enumerate(self.length):
                self.currentLength -= length
                self.length.pop(i)
                self.points.pop(i)
                if self.currentLength < self.allowoedLength:
                    break


        #رسم الثعبان 
        if self.points:
            for i , points in enumerate(self.points):
                if i != 0 :
                    cv2.line(imgMain, self.points[i-1],self.points[i],(0,0,255),20)
                cv2.circle(imgMain,self.points[-1],20,(200,0,200),cv2.FILLED)  

        #رسم الاكل
            rx ,ry =self.foodPoints
            imgMain = cvzone.overlayPNG(imgMain, self.imgageFood,
                                        (rx - self.wFood//2,ry - self.hFood//2))


        return imgMain  
game = SnakGame('apple.png')
while True:
    success , img= cap.read()
    img = cv2.flip(img,1)
    hands, img = detector.findHands(img,flipType=False)
    if hands:
        lmList= hands[0]['lmList']
        pointIndex = lmList[8] [0:2]
        #cv2.circle(img,pointIndex,20,(200,0,200),cv2.FILLED)
        img = game.update(img,pointIndex)
    cv2.imshow("snake Game [python AI]" , img)
    key = cv2.waitKey(1)


